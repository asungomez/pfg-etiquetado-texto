service: api

plugins:
  - serverless-python-requirements
  - serverless-wsgi

custom:
  wsgi:
    app: api.app

provider:
  name: aws
  profile: ${opt:aws-profile}
  region: ${opt:region}
  deploymentBucket:
    name: ${env:APP_NAME}-deployment-bucket
  stackName: ${env:APP_NAME}-api
  lambdaHashingVersion: "20201221"
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - cognito-idp:ListUsersInGroup
            - cognito-idp:ListUserPoolClients
            - cognito-idp:ListUsers
            - cognito-idp:AdminUpdateUserAttributes
            - cognito-idp:AdminGetUser
            - cognito-idp:AdminSetUserPassword
            - cognito-idp:ListUserPools
          Resource: "arn:aws:cognito-idp:${opt:region}:${aws:accountId}:userpool/${env:COGNITO_USER_POOL}"

functions:
  api:
    name: ${env:APP_NAME}-api
    handler: wsgi_handler.handler
    runtime: python3.8

resources:
  extensions:
    ApiLambdaFunction:
      Properties:
        Environment:
          Variables:
            COGNITO_USER_POOL_CLIENT_ID: ${env:COGNITO_USER_POOL_CLIENT_ID}
            COGNITO_USER_POOL: ${env:COGNITO_USER_POOL}
            APP_URL: ${env:APP_URL}
  Resources:
    LambdaExecutionPolicy:
      Type: "AWS::Lambda::Permission"
      Properties: 
        Action: lambda:InvokeFunction
        FunctionName: !GetAtt ApiLambdaFunction.Arn
        Principal: apigateway.amazonaws.com
        SourceArn: 
          !Join
            - ''
            - - "arn:aws:execute-api:${opt:region}:${aws:accountId}:"
              - !Ref ApiGatewayRestApi
              - "/*/*/*"
    ApiGatewayRestApi:
      Type: "AWS::ApiGateway::RestApi"
      Properties:
        EndpointConfiguration:
          Types:
            - REGIONAL
        Policy:
          Version: "2012-10-17"
          Statement:
            - Sid: AllowedRoles
              Effect: Allow
              Principal:
                AWS: 
                  - arn:aws:iam::${aws:accountId}:role/${env:APP_NAME}-auth-role
                  - arn:aws:iam::${aws:accountId}:role/${env:APP_NAME}-unauth-role
              Action: execute-api:Invoke
              Resource: execute-api:/*/*/*
            - Sid: PublicMethods
              Effect: Allow
              Principal: "*"
              Action: execute-api:Invoke
              Resource:
                - execute-api:/*/GET/accounts/_validate
        Body: ${file(./openapi.yml)}
    ApiGatewayStage:
      Type: AWS::ApiGateway::Stage
      Properties:
        DeploymentId: !Ref ApiGatewayDeployment
        Description: Production stage
        RestApiId: !Ref ApiGatewayRestApi
        StageName: api
    ApiGatewayDeployment:
      Type: AWS::ApiGateway::Deployment
      Properties:
        RestApiId:
          Ref: ApiGatewayRestApi
  Outputs:
    ApiId:
      Description: REST API's ID
      Value: !Ref ApiGatewayRestApi