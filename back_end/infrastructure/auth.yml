service: authentication

provider:
  name: aws
  profile: ${opt:aws-profile}
  region: ${opt:region}
  deploymentBucket:
    name: ${env:APP_NAME}-deployment-bucket
  stackName: ${env:APP_NAME}-authentication

resources:
  Resources:
    AuthRole:
      Type: 'AWS::IAM::Role'
      Properties:
        RoleName: ${env:APP_NAME}-auth-role
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Sid: ''
              Effect: Deny
              Principal:
                Federated: cognito-identity.amazonaws.com
              Action: 'sts:AssumeRoleWithWebIdentity'
    UnauthRole:
      Type: 'AWS::IAM::Role'
      Properties:
        RoleName: ${env:APP_NAME}-unauth-role
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Sid: ''
              Effect: Deny
              Principal:
                Federated: cognito-identity.amazonaws.com
              Action: 'sts:AssumeRoleWithWebIdentity'
    # CustomMessageConfirmationBucket:
    #   Type: AWS::S3::Bucket
    #   Properties:
    #     BucketName:
    #       Fn::If:
    #         - ShouldNotCreateEnvResources
    #         - Ref: verificationBucketName
    #         - Fn::Join:
    #             - ''
    #             - - Ref: verificationBucketName
    #               - '-'
    #               - Ref: env
    #     AccessControl: Private
    #     WebsiteConfiguration:
    #       IndexDocument: index.html
    #       ErrorDocument: index.html
    #     CorsConfiguration:
    #       CorsRules:
    #         - AllowedHeaders:
    #             - Authorization
    #             - Content-Length
    #           AllowedMethods:
    #             - GET
    #           AllowedOrigins:
    #             - '*'
    #           MaxAge: '3000'
    # SNSRole:
    #   Type: AWS::IAM::Role
    #   Properties:
    #     RoleName:
    #       Fn::If:
    #         - ShouldNotCreateEnvResources
    #         - demogree9e612f_sns-role
    #         - Fn::Join:
    #             - ''
    #             - - sns
    #               - ee9e612f
    #               - Fn::Select:
    #                   - '3'
    #                   - Fn::Split:
    #                       - '-'
    #                       - Ref: AWS::StackName
    #               - '-'
    #               - Ref: env
    #     AssumeRolePolicyDocument:
    #       Version: '2012-10-17'
    #       Statement:
    #         - Sid: ''
    #           Effect: Allow
    #           Principal:
    #             Service: cognito-idp.amazonaws.com
    #           Action:
    #             - sts:AssumeRole
    #           Condition:
    #             StringEquals:
    #               sts:ExternalId: demogree9e612f_role_external_id
    #     Policies:
    #       - PolicyName: demogree9e612f-sns-policy
    #         PolicyDocument:
    #           Version: '2012-10-17'
    #           Statement:
    #             - Effect: Allow
    #               Action:
    #                 - sns:Publish
    #               Resource: '*'
    # UserPool:
    #   Type: AWS::Cognito::UserPool
    #   UpdateReplacePolicy: Retain
    #   Properties:
    #     UserPoolName:
    #       Fn::If:
    #         - ShouldNotCreateEnvResources
    #         - Ref: userPoolName
    #         - Fn::Join:
    #             - ''
    #             - - Ref: userPoolName
    #               - '-'
    #               - Ref: env
    #     Schema:
    #       - Name: email
    #         Required: 'true'
    #         Mutable: 'true'
    #     LambdaConfig:
    #       CustomMessage:
    #         Ref: functiondemografiapfgee9e612fCustomMessageArn
    #     AutoVerifiedAttributes:
    #       Ref: autoVerifiedAttributes
    #     EmailVerificationMessage:
    #       Ref: emailVerificationMessage
    #     EmailVerificationSubject:
    #       Ref: emailVerificationSubject
    #     Policies:
    #       PasswordPolicy:
    #         MinimumLength:
    #           Ref: passwordPolicyMinLength
    #         RequireLowercase: 'false'
    #         RequireNumbers: 'false'
    #         RequireSymbols: 'false'
    #         RequireUppercase: 'false'
    #     UsernameAttributes:
    #       Ref: usernameAttributes
    #     MfaConfiguration:
    #       Ref: mfaConfiguration
    #     SmsVerificationMessage:
    #       Ref: smsVerificationMessage
    #     SmsConfiguration:
    #       SnsCallerArn:
    #         Fn::GetAtt:
    #           - SNSRole
    #           - Arn
    #       ExternalId: demogree9e612f_role_external_id
    # UserPoolCustomMessageLambdaInvokePermission:
    #   Type: AWS::Lambda::Permission
    #   DependsOn: UserPool
    #   Properties:
    #     Action: lambda:invokeFunction
    #     Principal: cognito-idp.amazonaws.com
    #     FunctionName:
    #       Ref: functiondemografiapfgee9e612fCustomMessageName
    #     SourceArn:
    #       Fn::GetAtt:
    #         - UserPool
    #         - Arn
    # UserPoolClientWeb:
    #   Type: AWS::Cognito::UserPoolClient
    #   Properties:
    #     ClientName: demogree9e612f_app_clientWeb
    #     RefreshTokenValidity:
    #       Ref: userpoolClientRefreshTokenValidity
    #     UserPoolId:
    #       Ref: UserPool
    #   DependsOn: UserPool
    # UserPoolClient:
    #   Type: AWS::Cognito::UserPoolClient
    #   Properties:
    #     ClientName: demogree9e612f_app_client
    #     GenerateSecret:
    #       Ref: userpoolClientGenerateSecret
    #     RefreshTokenValidity:
    #       Ref: userpoolClientRefreshTokenValidity
    #     UserPoolId:
    #       Ref: UserPool
    #   DependsOn: UserPool
    # UserPoolClientRole:
    #   Type: AWS::IAM::Role
    #   Properties:
    #     RoleName:
    #       Fn::If:
    #         - ShouldNotCreateEnvResources
    #         - Ref: userpoolClientLambdaRole
    #         - Fn::Join:
    #             - ''
    #             - - upClientLambdaRole
    #               - ee9e612f
    #               - Fn::Select:
    #                   - '3'
    #                   - Fn::Split:
    #                       - '-'
    #                       - Ref: AWS::StackName
    #               - '-'
    #               - Ref: env
    #     AssumeRolePolicyDocument:
    #       Version: '2012-10-17'
    #       Statement:
    #         - Effect: Allow
    #           Principal:
    #             Service:
    #               - lambda.amazonaws.com
    #           Action:
    #             - sts:AssumeRole
    #   DependsOn: UserPoolClient
    # UserPoolClientLambda:
    #   Type: AWS::Lambda::Function
    #   Properties:
    #     Code:
    #       ZipFile:
    #         Fn::Join:
    #           - ''
    #           - - const response = require('cfn-response');
    #             - const aws = require('aws-sdk');
    #             - const identity = new aws.CognitoIdentityServiceProvider();
    #             - exports.handler = (event, context, callback) => {
    #             - ' if (event.RequestType == ''Delete'') { '
    #             - '   response.send(event, context, response.SUCCESS, {})'
    #             - ' }'
    #             - ' if (event.RequestType == ''Update'' || event.RequestType == ''Create'') {'
    #             - '   const params = {'
    #             - '     ClientId: event.ResourceProperties.clientId,'
    #             - '     UserPoolId: event.ResourceProperties.userpoolId'
    #             - '   };'
    #             - '   identity.describeUserPoolClient(params).promise()'
    #             - '     .then((res) => {'
    #             - '       response.send(event, context, response.SUCCESS, {''appSecret'': res.UserPoolClient.ClientSecret});'
    #             - '     })'
    #             - '     .catch((err) => {'
    #             - '       response.send(event, context, response.FAILED, {err});'
    #             - '     });'
    #             - ' }'
    #             - '};'
    #     Handler: index.handler
    #     Runtime: nodejs12.x
    #     Timeout: '300'
    #     Role:
    #       Fn::GetAtt:
    #         - UserPoolClientRole
    #         - Arn
    #   DependsOn: UserPoolClientRole
    # UserPoolClientLambdaPolicy:
    #   Type: AWS::IAM::Policy
    #   Properties:
    #     PolicyName: demogree9e612f_userpoolclient_lambda_iam_policy
    #     Roles:
    #       - Ref: UserPoolClientRole
    #     PolicyDocument:
    #       Version: '2012-10-17'
    #       Statement:
    #         - Effect: Allow
    #           Action:
    #             - cognito-idp:DescribeUserPoolClient
    #           Resource:
    #             Fn::GetAtt:
    #               - UserPool
    #               - Arn
    #   DependsOn: UserPoolClientLambda
    # UserPoolClientLogPolicy:
    #   Type: AWS::IAM::Policy
    #   Properties:
    #     PolicyName: demogree9e612f_userpoolclient_lambda_log_policy
    #     Roles:
    #       - Ref: UserPoolClientRole
    #     PolicyDocument:
    #       Version: '2012-10-17'
    #       Statement:
    #         - Effect: Allow
    #           Action:
    #             - logs:CreateLogGroup
    #             - logs:CreateLogStream
    #             - logs:PutLogEvents
    #           Resource:
    #             Fn::Sub:
    #               - >-
    #                 arn:aws:logs:${region}:${account}:log-group:/aws/lambda/${lambda}:log-stream:*
    #               - region:
    #                   Ref: AWS::Region
    #                 account:
    #                   Ref: AWS::AccountId
    #                 lambda:
    #                   Ref: UserPoolClientLambda
    #   DependsOn: UserPoolClientLambdaPolicy
    # UserPoolClientInputs:
    #   Type: Custom::LambdaCallout
    #   Properties:
    #     ServiceToken:
    #       Fn::GetAtt:
    #         - UserPoolClientLambda
    #         - Arn
    #     clientId:
    #       Ref: UserPoolClient
    #     userpoolId:
    #       Ref: UserPool
    #   DependsOn: UserPoolClientLogPolicy
    # IdentityPool:
    #   Type: AWS::Cognito::IdentityPool
    #   Properties:
    #     IdentityPoolName:
    #       Fn::If:
    #         - ShouldNotCreateEnvResources
    #         - demografiapfgee9e612f_identitypool_ee9e612f
    #         - Fn::Join:
    #             - ''
    #             - - demografiapfgee9e612f_identitypool_ee9e612f
    #               - __
    #               - Ref: env
    #     CognitoIdentityProviders:
    #       - ClientId:
    #           Ref: UserPoolClient
    #         ProviderName:
    #           Fn::Sub:
    #             - cognito-idp.${region}.amazonaws.com/${client}
    #             - region:
    #                 Ref: AWS::Region
    #               client:
    #                 Ref: UserPool
    #       - ClientId:
    #           Ref: UserPoolClientWeb
    #         ProviderName:
    #           Fn::Sub:
    #             - cognito-idp.${region}.amazonaws.com/${client}
    #             - region:
    #                 Ref: AWS::Region
    #               client:
    #                 Ref: UserPool
    #     AllowUnauthenticatedIdentities:
    #       Ref: allowUnauthenticatedIdentities
    #   DependsOn: UserPoolClientInputs
    # IdentityPoolRoleMap:
    #   Type: AWS::Cognito::IdentityPoolRoleAttachment
    #   Properties:
    #     IdentityPoolId:
    #       Ref: IdentityPool
    #     Roles:
    #       unauthenticated:
    #         Ref: unauthRoleArn
    #       authenticated:
    #         Ref: authRoleArn
    #   DependsOn: IdentityPool
